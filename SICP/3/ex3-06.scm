(define (gen-rand A B M X)
  (define (mod a b)
    (if (> a b)
	(mod (- a b) b)
	a))
  (define (generate) (begin (set! X (mod (+ (* A X) B) M))
			    X))
  (define (reset)
    (lambda (seed) (begin (set! X seed)
			  "reset")))
  (define (dispatch mes)
    (cond ((eq? mes 'generate) (generate))
	  ((eq? mes 'reset) (reset))
	  (else (error "Error"))))
  dispatch)

(define rand (gen-rand 8 5 13 8))
